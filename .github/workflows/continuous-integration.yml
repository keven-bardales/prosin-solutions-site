name: Continuous Integration

on:
  push:
    branches:
      - main
      - next
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3
        with:
          node-version: ${{ matrix.node-version }}
      - uses: pnpm/action-setup@d882d12c64e032187b2edb46d3a0d003b7a43598 # v2.4.0
        id: pnpm-install
        with:
          version: 8
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
      - uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-store-
      - uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3
        name: Setup nextjs build cache
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run build
        run: pnpm build

  lint:
    runs-on: ubuntu-latest
    needs:
      - build
    strategy:
      matrix:
        node-version: [20]
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3
        with:
          node-version: ${{ matrix.node-version }}
      - uses: pnpm/action-setup@d882d12c64e032187b2edb46d3a0d003b7a43598 # v2.4.0
        id: pnpm-install
        with:
          version: 8
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
      - uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-store-
      - uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3
        name: Setup nextjs build cache
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run Lint
        run: pnpm lint

  testing:
      runs-on: ubuntu-latest
      needs: 
        - build
        - lint
      strategy:
        matrix:
          node-version: [20]
      steps:
        - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3
          with:
            node-version: ${{ matrix.node-version }}
        - uses: pnpm/action-setup@d882d12c64e032187b2edb46d3a0d003b7a43598 # v2.4.0
          id: pnpm-install
          with:
            version: 8
            run_install: false
        - name: Get pnpm store directory
          id: pnpm-cache
          run: echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
        - uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3
          name: Setup pnpm cache
          with:
            path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
            key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
            restore-keys: ${{ runner.os }}-pnpm-store-
        - uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3
          name: Setup nextjs build cache
          with:
            path: ${{ github.workspace }}/.next/cache
            key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
            restore-keys: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-
        - name: Setup cache Cypress binary
          uses: actions/cache@v3
          with:
            path: ~/.cache/Cypress
            key: cypress-${{ runner.os }}-binary-${{ hashFiles('**/pnpm-lock.yaml') }}
            restore-keys: |
              cypress-${{ runner.os }}-binary-
        - name: Force Cypress install
          run: npx cypress install --force
        - name: Setup and run Cypress tests
          uses: cypress-io/github-action@v6.5.0
          with:
            install-command: pnpm install --frozen-lockfile
            start: pnpm run dev
            wait-on: 'http://localhost:3000'
            command: pnpm run cypress:headless
            config-file: 'cypress.config.ts'
